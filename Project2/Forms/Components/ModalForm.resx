<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAIZJREFUOE/t
        k9EKgCAMRf2afqx0UP//VEF3sIWQbVo+RQcGMi8HdBp+QoxxkKWLm+VASmlFkbRu4QxnXSkRjQhuqEVa
        F7A3cQayWVo2lrRZppSkj2VKLn0tUyDhy9+l3GG5dBVCcB6zZvomuUxaVU+qSEmmNEstmVIthaT/13MD
        GS3ZzxLCAXszfuE6m1kOAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pbIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAnRJREFUSEvF
        ljtv1EAQxw00wDfiEaDAtigoeIRHwZcggKCz10ZAEi6ILwASReCChJRdI/ESQjoCiFwBDRIU5EIkHKCB
        AgjFLTObudzFHr/OQfyln2Ttzsxfu2t7xyqj0WZzixNGe1wRXXV8+cIRctkR6s8q8Axjtq8mXaFGMJbS
        hteORnObI6LzYPAF0OWQy7aQ5zCXylQTrO4YFFpKFy5LtOgE8iiVKyGtN8HWeZDcTRerTBeO4LLneZup
        Oi8MsIW6wxSoRxDdzjWH87nEJiY4OfVY33r23oDPXEwKX4Vks150pnzSAIfHH+hvP37pnr7CM45xsQm6
        rh8dIbtV0du7yASnCO+2ybKvYKbNxjIsHfTkdrKFLQ7kBSaIZezmHNn1dfrGHBvLgZ+aMTU/h0rfqdJq
        foEstZ59vcDG5BCbn4wtZvcyk4WcaDzSxwFuroj9odxtwdvW4Cb/MRPwCamXicFcxMy8vqbeGqbkm+FW
        7avnaFz6fNGkS2fb071XH9nYAmI0XkkM5nLq+hPdeveZbLWO2h02roDflY0RNOupjnGlTwnZAGPYanOx
        s5OZbIBxy8LOgZnIpa4x3AtX4HJQI9xkHrVXHKqd9Ms0PRQfxFDTOF67m/HHzQRkUsfYDdSYMUXt855u
        hcFOMiiLGsafUk0gNmYwkdtnjU4+1N9/rpBlXziGc1zOANB/yUNkt17wol1kEtY4EEZ6uvXBrHIQHMM5
        LqeH6ytBNmnhoWNjxiXWZLqw0/wv7e2gsDEr24dl0Mk80yKZtz2IzkKROFE0D4w9g7lUZnjhVmG7AgUn
        8BKn4nirIbEZ8+W4Le7vKretlvUXp4R/DeP8a9YAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnBack.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAANBJREFUOE/d
        lLsJAkEQQE8QQVMzA+G6MBCMjWxBE5sQi9AitAkjQwUrMDUQjYz8sr7ZnS1gZw8EH7xkh3nR3BX/g3Nu
        gg98YU+fbRDoa0w4YEtH6bDcxbOU4IKljtJhuYl7KcETBzpKh+UarqWkTHVkg8A8dDwLfbZBYIQfn3Ju
        g3UdpcNyiTcpwRHbOrJBoNqgQGSIbynCFhs6skNk5nOBpT7bISJns/K5QN7ZCETksHc+l3vYESIdPEkR
        rmj/9CJEqvs5RIiM8Y75v68fUhRfRecS1xv01t0AAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnConfirm.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAMBJREFUOE/t
        lLENwjAURFMxBTMQWiZgArYBiZJZqKjYgJ0oQOHd97dFbEchFEiReNLJ0f3zOU6RZl50XbdGO8mtBN4y
        +qwbtLXBEARa9ESG2wksHWQ+y1nPcLRhDYa2IeJ2AqtWKE4WyGHwbaEor4/ZK4SFjwqYXUIkUXzzWuEN
        6U1yqeyO3vmocAq/L3ygK6pdWdJMmcho4d7tQcgcQtQYLSwDGcqEqPEvBMzez2EC2rPymj4MVKqTp6j1
        7bOgaV6JYqBbVumO9gAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pbUploadImage.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>