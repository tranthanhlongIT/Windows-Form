<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAIZJREFUOE/t
        k9EKgCAMRf2afqx0UP//VEF3sIWQbVo+RQcGMi8HdBp+QoxxkKWLm+VASmlFkbRu4QxnXSkRjQhuqEVa
        F7A3cQayWVo2lrRZppSkj2VKLn0tUyDhy9+l3GG5dBVCcB6zZvomuUxaVU+qSEmmNEstmVIthaT/13MD
        GS3ZzxLCAXszfuE6m1kOAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pbIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAnRJREFUSEvF
        ljtv1EAQxw00wDfiEaDAtigoeIRHwZcggKCz10ZAEi6ILwASReCChJRdI/ESQjoCiFwBDRIU5EIkHKCB
        AgjFLTObudzFHr/OQfyln2Ttzsxfu2t7xyqj0WZzixNGe1wRXXV8+cIRctkR6s8q8Axjtq8mXaFGMJbS
        hteORnObI6LzYPAF0OWQy7aQ5zCXylQTrO4YFFpKFy5LtOgE8iiVKyGtN8HWeZDcTRerTBeO4LLneZup
        Oi8MsIW6wxSoRxDdzjWH87nEJiY4OfVY33r23oDPXEwKX4Vks150pnzSAIfHH+hvP37pnr7CM45xsQm6
        rh8dIbtV0du7yASnCO+2ybKvYKbNxjIsHfTkdrKFLQ7kBSaIZezmHNn1dfrGHBvLgZ+aMTU/h0rfqdJq
        foEstZ59vcDG5BCbn4wtZvcyk4WcaDzSxwFuroj9odxtwdvW4Cb/MRPwCamXicFcxMy8vqbeGqbkm+FW
        7avnaFz6fNGkS2fb071XH9nYAmI0XkkM5nLq+hPdeveZbLWO2h02roDflY0RNOupjnGlTwnZAGPYanOx
        s5OZbIBxy8LOgZnIpa4x3AtX4HJQI9xkHrVXHKqd9Ms0PRQfxFDTOF67m/HHzQRkUsfYDdSYMUXt855u
        hcFOMiiLGsafUk0gNmYwkdtnjU4+1N9/rpBlXziGc1zOANB/yUNkt17wol1kEtY4EEZ6uvXBrHIQHMM5
        LqeH6ytBNmnhoWNjxiXWZLqw0/wv7e2gsDEr24dl0Mk80yKZtz2IzkKROFE0D4w9g7lUZnjhVmG7AgUn
        8BKn4nirIbEZ8+W4Le7vKretlvUXp4R/DeP8a9YAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnBack.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAANBJREFUOE/d
        lLsJAkEQQE8QQVMzA+G6MBCMjWxBE5sQi9AitAkjQwUrMDUQjYz8sr7ZnS1gZw8EH7xkh3nR3BX/g3Nu
        gg98YU+fbRDoa0w4YEtH6bDcxbOU4IKljtJhuYl7KcETBzpKh+UarqWkTHVkg8A8dDwLfbZBYIQfn3Ju
        g3UdpcNyiTcpwRHbOrJBoNqgQGSIbynCFhs6skNk5nOBpT7bISJns/K5QN7ZCETksHc+l3vYESIdPEkR
        rmj/9CJEqvs5RIiM8Y75v68fUhRfRecS1xv01t0AAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnConfirm.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAMBJREFUOE/t
        lLENwjAURFMxBTMQWiZgArYBiZJZqKjYgJ0oQOHd97dFbEchFEiReNLJ0f3zOU6RZl50XbdGO8mtBN4y
        +qwbtLXBEARa9ESG2wksHWQ+y1nPcLRhDYa2IeJ2AqtWKE4WyGHwbaEor4/ZK4SFjwqYXUIkUXzzWuEN
        6U1yqeyO3vmocAq/L3ygK6pdWdJMmcho4d7tQcgcQtQYLSwDGcqEqPEvBMzez2EC2rPymj4MVKqTp6j1
        7bOgaV6JYqBbVumO9gAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pbUploadImage.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQ4AAAEOCAYAAAB4sfmlAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAA5sSURBVHhe7Z0PxF/XGcdjamamoqJqqqqqqqYqqipqYmZiomKmqiJmZqKqImqiqkRF1VRVVUxN
        TNRUVFVVxdRETVVEVUxMRERE1VRNTcTU9v2uSeXPkyb3d85z77n3fD58VFnf9+6e8z73Pvec8zxrAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgRrlRPilfkW/Jv8m/y3/I
        E1hF38uj8gP5pnxJbpcPyu9LgOa5Te6SDhDn5H9xUv8t/yIdSNZJgKbYIN+RX8loAuP0npX75D0SYFLu
        kG/LaKJim/5H/kHyBgKj8x3p198vZTQ5sX0/kw9LgFHwB7f9MpqMOC+dWj4vb5AAaayV78toEuJ8fUN+
        VwJU5wfSqyXRxMP566VcggdUxRPKqybRhMPl+Jr09yuAKrwoo4mGy3OnBChmi2R/Rj9645735QCszC3S
        y3bRBMPl6q3sPjIAsBIHZDSxcPm+KgEGs0lGEwr70DtMfVAO4LrxhqBjMppQ2I8fSlZZ4LrxdvJoImF/
        PiIBrsn35BkZTSLsT9f7YGMYXBMX3okmEPbrNglwVfxkOSmjyYP96gpjfOuAq7JVRhMHcbMEuAI/UQ7L
        aNLU8pT0SUwXksE6+nyJiyl9LqN7XkuXIAS4Aq/ZRxOmht7G/ITkI1sePr3sQsVZxwP8cyk7CFfwJxlN
        mFI94ZwCwTg8K6NxqOHLEuAbbpJZZQD9Og3j4ZTzPRmNRalOh2i5AN+QteHLB+QclGBcbpdZDwI2hME3
        eGtxNElK9Z4QmAbXEo3GpFS/zQCsuVtmfFD7VHoXKkyD2x/8S0ZjU6IPv90soXN2y2iClPq0hGnJqtzG
        m2Tn+EOae7lGk6NEtx6k4c/0uGFWRitO96mFjrlPRhOjVC/tQhtkFJl2anurhE7J+oD2kIQ2cLe2aIxK
        3SGhQ5ym+Mh0NClKdAEgDkS1g3frnpbRWJVIutIp62U0IUp9RkJbeCt6NFYlenWFdKVD9shoQpTo3Ncf
        5KAt7pfReJX6uISOyFpNcYtIaI+s8ebEbGfcKzM2fbG+3y7PyWjMSvRSL5vBOiJj0xdLdG3jh0U0bqX+
        RkInZLy28pW9bbLSFc6udMKPZEaawrp++2SkK2clu4Q7IKPQiwPRbRLaJitdoQp6B7hidTT4JX4koX2c
        rhyX0RiW6G3tsGBcMzIjTXlKwjx4QUZjWKIPNa6VsFC8qzMa+BIdiO6UMA+yNoNRGWzBfCKjQS/RPxPm
        g9OVEzIayxIPSFggWZW+OJsyP34vo7Es0dXG3KIBFoYrckUDXqIDkZd3YV5kpSu/lLAwPpbRYJfoDUUw
        P5yuZPQIdpc+WBB3yYw0xRuKYJ6QrsA12SWjgS7VpQdhnmSlK7+QsBCOyGiQS/SXeb/ywnzJWF35s4QF
        4MI6GWmKS+/DvMnYDPaFJF1ZADtlNMClbpAwb7LSlS0SZo7PkUSDW6KL394gYf5knF15XcKM8YnVaGBL
        3SthGWTUnnW6Qlf7GZOVpvxUwjLIasrlfi4wUzK60P9T0kx6WWT019knYYa4/mfGagoTYnlkVAb7XPKA
        mSEu5RcNaKmbJSyLrKr3myTMDPc4iQazRLYULxe37ozGvMQ/SpgRWWkKh5iWS0a64u9h7l0LM8GNkaKB
        LJUqT8uFdAX+3+MkGsQSqSu5fDL6rvAxfSY4TXEn8WgQS6SS9fLJaJ3h1RXSlRmQlab8WsKyyWrWRboy
        AzLSFJoL90NGQWvSlcbJSlPel9AHGS00SFcaJytNeVxCH2RVwyddaZiMNMWTiL6wfZFR2Jp0pVH8x52R
        pvigHPRFRo1a0pVGyUpT6AvbH1nlJklXGiQjTbGeRNAfGZXjSFcaI2s1xUtzVDLvE79pRnOiRNKVxnhC
        RgNV6m4JfXK7zEhXfi6hEbLSFB98gn7JqCBHutIIWaspLidHmtI3GcWgKGTcCFlpinuLQt9kPZQoZNwA
        WWnKgxIgo5IcfVcmJms15YwkTQGTsT+INpETk5WmvCIBTNbDia72E3JIRoNS6k8kwAUy5hld7Sci60ng
        ArP0hYWLyXizpWL+CPgP2TvuLjbrbMp+efnvwr71ZrCMh9Sj8vLfxbe1QtZJ9371a6K36kY3HnFJeqeq
        33gPSteA4Y1kAH678LHmL2V0cxF70Q/M7RKugdsPuExfdBMRe/VNSR/aq+BtuFmbuRDn7tuSj/YBL8vo
        hiHi1zqFh4vwKdSMr9aIS9LdBL0NAc7jrt7RjULES90jQXjtmuVWxOuTcg/ncdu96AYh4pV6rwddBYUr
        P0c3CBFj18vucQ3G6OYgYuwG2T0EDsRhEjgEgQNxmAQOQeBAHCaBQxA4EIdJ4BAEDsRhEjgEgQNxmAQO
        MXXgcN0Pd+xyyfqX5PPn/+makG487PMB0X+Hy9Vl/dwWwXPiRXnxnDgsp54TBA4xReD4VHoiPCS95f3b
        cB2EjdKVz12dKfp5OH9Pyxek++lca064BIQLWu+VUxyXIHCIMQPHKflbuWoLPpdyc+Fa912Jfj7OzxNy
        m1y1UM6N0iUuP5PRz8+QwCHGCBw+su+WjrVqOHqyvCozupnjOJ6Tz8lafVxvkj7lPcacIHCI7MDh9OJn
        MoPN0l25ot+L7epU1WlqBo9IfyOJfm8tCRwiM3CclHfLTO6TnojR78f29LH0O2QmD8jM72EEDpEVOPzH
        fKccA1cwo6ZI+/ob11gVtO6XWW8eBA6RETjOyrFvrr+yU/6wXb2EOvZxdKeyGd88CBwiI3A8JafAH9ui
        68HpdYOjKfA+kOh6SiRwiNqB44icqoy81/+Pyei6cDrddmOqcntetfG3tui6VpXAIWoHjqk7zW+R0XXh
        NDpV8KauKdkqo2tbVQKHqBk4vEV8avxkOyqj68PxdWfAqfEbsDeaRde3igQOUTNw/Eq2QFYnfRyu91W0
        wNMyur5VJHCIWoHDKynevdcCP5SssEyvDzC20vHdWwOia1xFAoeoFTh8mrElPpHRdeJ4HpQtUStdIXCI
        WoHDp11b4jUZXSeOp5fHW8LH8qPrHCqBQ9QKHD712hI+MRldJ46nVzNa4lkZXedQCRyiVuB4WLZE7SU4
        HO7US/OX44dbdJ1DJXCIWoGjtUlS6/8Xru7U+zcup9bDhMAhav2BZR2dXxU2gk1v1tH5VfF2geg6h0rg
        ELUCx2OyJWq9luLqtpa+7pDRdQ6VwCFqBY5dsiX2yOg6cTxd5rElXpbRdQ6VwCFqBQ4vdbXEOzK6ThxP
        l/Jrib/K6DqHSuAQtQKHi7RMdQLycnxKlsI+0+tqX63MCRdDrtVWgcAhagUO66pLLeAVnuj6cFx9MvYe
        2QIu6hNd4yoSOETNwOHeJy2wT0bXh+PrXiktcEBG17eKBA5RM3C4xuPUB918wM0H7qLrw/F1vxO3s5iS
        22XNQ48EDlEzcFi365sS91uJrgun00fap6T2GyiBQ9QOHH7aZ7dEuBouhstx+vb08frslghXw3/ktQsW
        EzhE7cBhXQls1ZZ+q+LaklT+atdDcuxatE6RjsvoekokcIiMwGF9rH2spTj/Hnc2j64D29EbsMbCQeot
        GV1HqQQOkRU4rHdvZgcP/3yv5kS/H9vzdzIbBw1vPot+fw0JHCIzcFj/UWe9onqjV+YEwRzdgDzrgeKU
        Nfvtk8AhsgOH9Vbf2q3//LHN5Qqj34ft+668RdbEH+UPy+j31ZTAIcYIHNZd5V19vPSjqZ8oft3N7kiO
        +boxtE8xl76RuiDyM9KrN9HvqS2BQ4wVOC7orlou67dODsFPJweM0zL6uThffabFJ2mHzgm/xXqPiBuc
        Rz83SwKHGDtwXPCcdLMeD/wmeZf08pm/W6w9/+++Nj9JvJTn/330c3A5eg+QK6O7RIMLQ7mlwcVzwqmI
        z5zslk5Tp9qzQ+AQUwUOxLlK4BAEDsRhEjgEgQNxmAQOQeBAHCaBQxA4EIdJ4BAEDsRhEjgEgQNxmAQO
        QeBAHGZrHeom4ccyujmIGOvNid1zs6RqFuL16TNSYxepapYxThQiLkE3+oLzbJfRTULES3UzcziPX718
        QjG6UYj4tR/KscphzoaHJCdQEWNd66OVrnTN8agkeCBeqnvO+pg/fAu+QWMXRkFs1RPyAQnXgYumuEK5
        S7tFNxNx6Z6RLijkUpUwEFde2ih3SPfEiG5wS7pPqVtQYnuOVQ90Vb2XydXXXcLQO0PHbh61WFzzM7rh
        LfmxhDbxEzwas1b0dwzeLhIgcEAJBI5OIXBACQSOTiFwQAkEjk4hcEAJBI5OIXBACQSOTiFwQAkEjk4h
        cEAJBI5OIXBACQSOTiFwQAkEjk5x89+vZHTTW/EjCW1yUkZj1oreEs828yS+kNFNb8U3JLTJIRmNWSse
        k5DEuzK66a34pIQ28UG3aMxacZ+EJLbK6Ka3oE833iqhTdbLllPdTRKScG3SUzK68VO7X0LbHJTR2E3t
        EUkt0WRc5bm1J4cLDvG20T6u2enVi2gMp9Jvqq63CyPwgowGYQpdI5V6kPPhMdnSg2enhJHwa50/dk09
        AbzK4963MC+2ybMyGtOx9AOHoDER/qDkZaxoYDJ1wHpP0sNzvtwrP5DR+GbrbxqkJxPjTTP+7vG6PC69
        kcZ5bG39duGdoa59StXpZeA3Vzc93yuPSvdljca+VM9JP+C85OqHHR9CG8SBxFt3a8tgLx+PcTT2pbIj
        FAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgMGvW/A9g1b7BCDsBkAAAAABJRU5ErkJggg==
</value>
  </data>
</root>